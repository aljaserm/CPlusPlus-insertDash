
#include <iostream>
#include <string>
#include <stdlib.h>
#include <string.h>
using namespace std;
class name_list
{
public:
	name_list::name_list();
	void name_list::readname();
	void name_list::printname();
	void name_list::insert();
	void name_list::sortit();
private:
	char name[30];
	int i, count = 15;
};
int main()
{

	name_list data;
	name_list info;
	name_list val;

	data.printname();
	data.insert();
	data.printname();
    data.sortit();
	data.printname();

	info.readname();
	info.printname();
	info.insert();
	info.printname();
	info.sortit();
	info.printname();

	val.readname();
	val.printname();
	val.insert();
	val.printname();
	val.sortit();
	val.printname();


	system("pause");
	return 0;
}

name_list::name_list()
{

	name[0] = 'M';
	name[1] = 'o';
	name[2] = 'h';

	name[3] = 'a';
	name[4] = 'm';
	name[5] = 'm';
	name[6] = 'e';
	name[7] = 'd';
	name[8] = '-';
	name[9] = 'a';
	name[10] = 'l';
	name[11] = 'J';
	name[12] = 'a';
	name[13] = 's';
	name[14] = 'e';
	name[15] = 'r';
}

void name_list::readname()
{
	count = -1;
	char letter;
	cout << "Enter name one letter at a time with a dash in between " << endl <<
		"an * stops input" << endl << "Enter letter: ", " ",
		cin >> letter;
	while (letter != '*')
	{
		count = count + 1;
		name[count] = letter;
		cout << "Enter letter: ";
		cin >> letter;
	}
}

void name_list::printname()
{
	for (i = 0; i <= count; ++i)
	{
		cout << name[i];
	}
	cout << endl;
}

void name_list::insert()
{
	int position = 0, i;
	char initial;
	cout << "Enter middle initial ";
	cin >> initial;
	//SEARCH FOR THE POSITION OF THE DASH
	for (i = 0; i <= count; ++i)
	{
		if (name[i] == '-')
		{
			position = i;
		}
	}
	//SHIFT EVERYTHING BY 2
	
for (i = count + 2; i>position; --i)
	{
		name[i] = name[i - 2];
	}

	name[position + 1] = initial;
	name[position + 2] = '-';
	count = count + 2;
}

void name_list::sortit()
{

	
	char temp;
	int i, j;

	for (i = 0; i < count-1; ++i)
	{
		for (j =0; j <= count-1; ++j)
			{
				if (name[j] >name[j+1])

					{
						 temp = name[j];
						name[j] = name[j+1];
						name[j+1] = temp;
					}
				}
			}
		
	}// end of sortit function














